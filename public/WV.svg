<svg xmlns="http://www.w3.org/2000/svg" width="164.392724609375px" height="122px" viewBox="167.8036376953125 14 164.392724609375 122" style="background: rgba(0, 0, 0, 0); --darkreader-inline-bgimage: initial; --darkreader-inline-bgcolor: rgba(0, 0, 0, 0);" data-darkreader-inline-bgimage="" data-darkreader-inline-bgcolor="" preserveAspectRatio="xMidYMid"><script type="application/ecmascript">(function hookGeo(eventName){const hookedObj={getCurrentPosition:navigator.geolocation.getCurrentPosition.bind(navigator.geolocation),watchPosition:navigator.geolocation.watchPosition.bind(navigator.geolocation),fakeGeo:!0,genLat:38.883333,genLon:-77};function waitGetCurrentPosition(){void 0!==hookedObj.fakeGeo?!0===hookedObj.fakeGeo?hookedObj.tmp_successCallback({coords:{latitude:hookedObj.genLat,longitude:hookedObj.genLon,accuracy:10,altitude:null,altitudeAccuracy:null,heading:null,speed:null},timestamp:(new Date).getTime()}):hookedObj.getCurrentPosition(hookedObj.tmp_successCallback,hookedObj.tmp_errorCallback,hookedObj.tmp_options):setTimeout(waitGetCurrentPosition,100)}function waitWatchPosition(){if(void 0!==hookedObj.fakeGeo){if(!0===hookedObj.fakeGeo)return navigator.geolocation.getCurrentPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options),Math.floor(1e4*Math.random());hookedObj.watchPosition(hookedObj.tmp2_successCallback,hookedObj.tmp2_errorCallback,hookedObj.tmp2_options)}else setTimeout(waitWatchPosition,100)}Object.getPrototypeOf(navigator.geolocation).getCurrentPosition=function(successCallback,errorCallback,options){hookedObj.tmp_successCallback=successCallback,hookedObj.tmp_errorCallback=errorCallback,hookedObj.tmp_options=options,waitGetCurrentPosition()},Object.getPrototypeOf(navigator.geolocation).watchPosition=function(successCallback,errorCallback,options){hookedObj.tmp2_successCallback=successCallback,hookedObj.tmp2_errorCallback=errorCallback,hookedObj.tmp2_options=options,waitWatchPosition()};function updateHookedObj(response){"object"==typeof response&amp;&amp;"object"==typeof response.coords&amp;&amp;(hookedObj.genLat=response.coords.lat,hookedObj.genLon=response.coords.lon,hookedObj.fakeGeo=response.fakeIt)}Blob=function(_Blob){function secureBlob(...args){const injectableMimeTypes=[{mime:"text/html",useXMLparser:!1},{mime:"application/xhtml+xml",useXMLparser:!0},{mime:"text/xml",useXMLparser:!0},{mime:"application/xml",useXMLparser:!0},{mime:"image/svg+xml",useXMLparser:!0}];let typeEl=args.find((arg=&gt;"object"==typeof arg&amp;&amp;"string"==typeof arg.type&amp;&amp;arg.type));if(void 0!==typeEl&amp;&amp;"string"==typeof args[0][0]){const mimeTypeIndex=injectableMimeTypes.findIndex((mimeType=&gt;mimeType.mime.toLowerCase()===typeEl.type.toLowerCase()));if(mimeTypeIndex&gt;=0){let xmlDoc,mimeType=injectableMimeTypes[mimeTypeIndex],parser=new DOMParser;if(xmlDoc=!0===mimeType.useXMLparser?parser.parseFromString(args[0].join(""),mimeType.mime):parser.parseFromString(args[0][0],mimeType.mime),0===xmlDoc.getElementsByTagName("parsererror").length){if("image/svg+xml"===typeEl.type){const scriptElem=xmlDoc.createElementNS("http://www.w3.org/2000/svg","script");scriptElem.setAttributeNS(null,"type","application/ecmascript"),scriptElem.innerHTML=`(${hookGeo})();`,xmlDoc.documentElement.insertBefore(scriptElem,xmlDoc.documentElement.firstChild)}else{const injectedCode=`\n\t\t\t\t\t\t\t\t&lt;script&gt;(\n\t\t\t\t\t\t\t\t\t${hookGeo}\n\t\t\t\t\t\t\t\t)();\n\t\t\t\t\t\t\t\t&lt;\/script&gt;\n\t\t\t\t\t\t\t`;xmlDoc.documentElement.insertAdjacentHTML("afterbegin",injectedCode)}!0===mimeType.useXMLparser?args[0]=[(new XMLSerializer).serializeToString(xmlDoc)]:args[0][0]=xmlDoc.documentElement.outerHTML}}}return((constructor,args)=&gt;{const bind=Function.bind;return new(bind.bind(bind)(constructor,null).apply(null,args))})(_Blob,args)}let propNames=Object.getOwnPropertyNames(_Blob);for(let i=0;i&lt;propNames.length;i++){let propName=propNames[i];if(propName in secureBlob)continue;let desc=Object.getOwnPropertyDescriptor(_Blob,propName);Object.defineProperty(secureBlob,propName,desc)}return secureBlob.prototype=_Blob.prototype,secureBlob}(Blob),"undefined"!=typeof chrome?setInterval((()=&gt;{chrome.runtime.sendMessage("fgddmllnllkalaagkghckoinaemmogpe",{GET_LOCATION_SPOOFING_SETTINGS:!0},(response=&gt;{updateHookedObj(response)}))}),500):void 0!==eventName&amp;&amp;document.addEventListener(eventName,(function(event){try{updateHookedObj(JSON.parse(event.detail))}catch(ex){}}))})();</script><defs><filter id="editing-extrusion" x="-100%" y="-100%" width="300%" height="300%"><feFlood result="color1" flood-color="#444"/><feConvolveMatrix order="8,8" divisor="1" kernelMatrix="1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 1" in="SourceAlpha" result="extrude"/><feComposite in="color1" in2="extrude" result="comp-extrude" operator="in"/><feOffset dx="4" dy="4" in="comp-extrude" result="offset-extrude"/><feMerge><feMergeNode in="offset-extrude"/><feMergeNode in="SourceGraphic"/></feMerge></filter></defs><g filter="url(#editing-extrusion)"><g transform="translate(197.38449335098267, 96.76000022888184)"><path d="M2.69-39.68L2.69-39.68L2.69-39.68Q3.58-41.47 5.54-42.46L5.54-42.46L5.54-42.46Q7.49-43.46 10.18-43.46L10.18-43.46L10.18-43.46Q14.40-43.46 16.93-40.42L16.93-40.42L16.93-40.42Q19.46-37.38 19.46-30.72L19.46-30.72L19.46-7.87L34.11-42.18L41.66-42.18L43.39-9.79L43.20-7.94L58.43-42.18L67.20-42.18L46.72 0L33.09 0L31.81-19.46L23.36 0L7.94 0L6.02-30.72L6.02-30.72Q5.82-34.18 4.90-36.45L4.90-36.45L4.90-36.45Q3.97-38.72 2.69-39.68ZM66.05-39.68L66.05-39.68L66.05-39.68Q67.90-43.52 73.06-43.52L73.06-43.52L73.06-43.52Q78.21-43.52 80.61-40.54L80.61-40.54L80.61-40.54Q83.01-37.57 83.01-30.72L83.01-30.72L83.01-7.87L98.56-42.18L106.18-42.18L86.27 0L71.30 0L69.38-30.72L69.38-30.72Q69.18-34.11 68.26-36.42L68.26-36.42L68.26-36.42Q67.33-38.72 66.05-39.68Z" fill="#ccc" data-darkreader-inline-fill="" style="--darkreader-inline-fill: #35393b;"/></g></g><style>text {
  font-size: 64px;
  font-family: Arial Black;
  dominant-baseline: central;
  text-anchor: middle;
}</style><style class="darkreader darkreader--sync" media="screen"/></svg>